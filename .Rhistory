merged = merge(gdp, edu, by.x=X,by.y = CountryCode)
names(gdp)
?merge
head(gdp)
merged = merge(gdp, edu, by.x=X,by.y = CountryCode, all=T)
gdp = read.csv("gdp.csv", skip = 4)
head(gdp)
head(edu)
merged = merge(gdp, edu, by.x=X,by.y = CountryCode, all=T)
names(gpd)
names(gdp)
gdp
gdp = read.csv("gdp.csv")
gdp
gdp = read.csv("gdp.csv")
gdp
names(gdp)
gdp
names(edu)
head(edu)
merged = merge(gdp, edu, by.x=X.2,by.y = Name, all=T)
merged = merge(gdp, edu, by.x="X.2",by.y = "Name", all=T)
merged = merge(gdp, edu, by.x="X.2",by.y = "Table.Name", all=T)
head(merged,10)
merged = merge(gdp, edu, by.x="X",by.y = "CountryCode", all=T)
length(merged)
names(gdp)
head(gdp)
select(gdp, ranking)
select(gdp, Gross.domestic.product.2012)
arrange(merged, desc(Gross.domestic.product.2012))
arrange(merged, desc(Gross.domestic.product.2012)) %>% select(CountryCode)
arrange(merged, desc(Gross.domestic.product.2012)) %>% select(Table.Name)
merged = merge(gdp, edu, by.x="X",by.y = "CountryCode")
length(merged)
arrange(merged, Gross.domestic.product.2012)
arrange(merged, desc(Gross.domestic.product.2012))
arrange(merged, desc(Gross.domestic.product.2012)) %>% select(X.2)
arrange(merged, desc(Gross.domestic.product.2012)) %>% select(X.2, Gross.domestic.product.2012)
merged %>% mutate(numRank = as.numeric(Gross.domestic.product.2012)) %>% arrange(merged, desc(numRank)) %>% select(X.2, numRank)
merged %>% mutate(numRank = as.numeric(Gross.domestic.product.2012)) %>% select(X.2, numRank) %>% arrange(numRank)
merged %>% mutate(numRank = as.numeric(Gross.domestic.product.2012)) %>% select(X.2, numRank) %>% arrange(desc(numRank))
sorted = merged %>% mutate(numRank = as.numeric(Gross.domestic.product.2012)) %>% select(X.2, numRank) %>% arrange(desc(numRank))
head(sorted, 13)
gdp
names(edu)
merged = merge(gdp, edu, by.x = "X", by.y="CountryCode")
str(merged)
merged = merge(gdp, edu, by.x = "X", by.y="CountryCode", all=T)
str(merged)
merged
select(merged, X, CountryCode)
names(merged)
select(merged, X, Long.Name)
merged = merge(gdp, edu, by.x = "X", by.y="CountryCode")
select(merged, X, Long.Name)
head(gdp)
head(gdp,20)
merged %>% arrange(Gross.domestic.product.2012)
merged %>% arrange(Gross.domestic.product.2012) %>% select(X)
merged %>% arrange(Gross.domestic.product.2012) %>% select(X, Gross.domestic.product.2012)
merged %>% mutate(Gross.domestic.product.2012 = as.numeric(Gross.domestic.product.2012))
merged %>% mutate(Gross.domestic.product.2012 = as.numeric(Gross.domestic.product.2012)) %>% select(X, Gross.domestic.product.2012)
merged %>% mutate(Gross.domestic.product.2012 = as.numeric(Gross.domestic.product.2012)) %>% select(X, Gross.domestic.product.2012) %>% arrange(desc(Gross.domestic.product.2012))
filter(gdp, X=="ITA")
sorted = merged %>% mutate(Gross.domestic.product.2012 = as.numeric(Gross.domestic.product.2012)) %>% select(X, Gross.domestic.product.2012) %>% arrange(desc(Gross.domestic.product.2012))
filter(sorted, X == ITA)
filter(sorted, X == "ITA")
names(edu)
filter(merged, X=="ITA")
sorted = merged %>% mutate(Gross.domestic.product.2012 = as.numeric(Gross.domestic.product.2012)) %>% select(X, Gross.domestic.product.2012) %>% arrange(desc(Gross.domestic.product.2012))
head(sorted)
head(sorted,13)
head(gdp)
filter(sorted, X=="CHN")
filter(merged, X=="CHN")
select(merged, X, Gross.domestic.product.2012)
sorted = merged %>% select(X, Gross.domestic.product.2012) $>$ filter(!is.na(Gross.domestic.product.2012))
sorted = merged %>% select(X, Gross.domestic.product.2012) $>$ filter(Gross.domestic.product != NA)
sorted = merged %>% select(X, Gross.domestic.product.2012) %>% filter(Gross.domestic.product != NA)
sorted = merged %>% select(X, Gross.domestic.product.2012) %>% filter(Gross.domestic.product.2012 != NA)
sorted
sorted = merged %>% select(X, Gross.domestic.product.2012) %>% filter(!is.na(Gross.domestic.product.2012))
sorted
sorted = merged %>% select(X, Gross.domestic.product.2012) %>% mutate(Gross.domestic.product.2012 = as.numeric(Gross.domestic.product.2012))
sorted
sorted = merged %>% select(X, Gross.domestic.product.2012) %>% mutate(NumRank = as.numeric(Gross.domestic.product.2012))
sorted
?as.numeric
gpd
str(gdp)
sorted = merged %>% select(X, Gross.domestic.product.2012) %>% mutate(NumRank = as.numeric(levels(Gross.domestic.product.2012)))
sorted
sorted = merged %>% select(X, Gross.domestic.product.2012)
sorted %>% mutate_each_(funs(as.factor(Gross.domestic.product.2012)))
sorted %>% mutate_each_(funs(as.factor, Gross.domestic.product.2012)
)
sorted %>% mutate_each_(funs(as.factor), Gross.domestic.product.2012)
sorted %>% mutate_each_(funs(as.numeric), Gross.domestic.product.2012)
names(sorted)
sorted %>% mutate_each_(funs(as.numeric), Gross.domestic.product.2012)
sorted = sorted %>% mutate_each_(funs(as.numeric), Gross.domestic.product.2012)
sorted = sorted %>% mutate(numRank = factro(Gross.domestic.product.2012))
sorted = sorted %>% mutate(numRank = factor(Gross.domestic.product.2012))
sorted
sorted = sorted %>% mutate(numRank = factor(Gross.domestic.product.2012)) %>% arrange(desc(numRank))
sorted
sorted = sorted %>% mutate(numRank = as.numeric(factor(Gross.domestic.product.2012)) %>% arrange(desc(numRank))
f
sorted = sorted %>% mutate(numRank = as.numeric(factor(Gross.domestic.product.2012))) %>% arrange(desc(numRank))
sorted
sorted = sorted %>% mutate(numRank = as.numeric(levels(Gross.domestic.product.2012))) %>% arrange(desc(numRank))
sorted
sorted = sorted %>% arrange(desc(numRank))
sorted
sorted = sorted %>% mutate(numRank = as.character(Gross.domestic.product.2012)) %>% arrange(desc(numRank))
sorted
sorted = sorted %>% mutate(numRank = as.numeric(numRank)) %>% arrange(desc(numRank))
sorted
head(sorted, 13)
filter(gdp, X=="KNA")
head(gdp, 15)
names(edu)
merged = merged %>% group_by(Income.Group)
merged %>% summarize(avgGdp = mean())
merged %>% summarize(avgGdp = mean)
head(gdp)
merged %>% summarize(avgGdp = mean(X.4))
merged %>% summarize(avgGdp = mean(X.3))
head(gdp,10)
merged
merged %>% summarize(avgGdp = mean(X.3))
str(gdp)
head(gdp)
merged = merged %>% mutate(X.3 = as.character(X.3)) %>% mutate(X.3 = as.numeric(X.3))
merged
str(merged)
merged  = merge(gdp, edu, by.x = "X", by.y = "CountryCode")
merged = merged %>% mutate(numGdp = as.character(X.3)) %>% mutate(numGdp = as.numeric(numGdp))
merged
select(merged, numGpd)
select(merged, numGdp)
select(merged, X,numGdp)
merged = merged %>% group_by(Income.Group)
merged
levels(merged$X.3)
converted = as.numeric(levels(merged$X.3))
converted
agri
agriData
with(agriData, ACR==3, AGS==6)
agriLogical=with(agriData, ACR==3, AGS==6)
wich(agriLogical)
witch(agriLogical)
which(agriLogical)
agriData[25]
agriData[25,]
agriLogical=with(agriData, ACR=="3", AGS=="6")
which(agricultureLogica)
which(agriLogical)
agriData[36,]
agriLogical=with(agriData, ACR=="3" & AGS=="6")
which(agriLogical)
quantile(img, c(0.30,0.80))
?read.csv
gpd = read.csv("gdp.csv", stringsAsFactors = T)
gdp = gpd
gdp
gdp = read.csv("gdp.csv", stringsAsFactors = T)
gdp = gdp %>% mutate(numGdpd = as.numeric(as.character(Gross.domestic.product.2012)))
gdp
str(gdp)
gdp %>% select(X,Gross.domestic.product.2012,numGdpd)
gdp %>% select(X,Gross.domestic.product.2012,numGdpd) %>% arrange(numGdpd)
gdp %>% select(X,Gross.domestic.product.2012,numGdpd) %>% arrange(desc(numGdpd))
edu = read.csv("educational.csv", stringsAsFactors = )
edu = read.csv("educational.csv", stringsAsFactors = T)
merged = merge(gdp, edu, by.x="X", by.y="CountryCode")
merged
merged = merged %>% group_by(Income.Group)
merged
merged = mutate(merged, numGdp = as.numeric(as.character(X.3))))
merged = mutate(merged, numGdp = as.numeric(as.character(X.3)))
merged
gdp = mutate(gdp, numProd = as.numeric(as.character(X.3)))
gdp
gdp = mutate(gdp, numProd = as.numeric(gsub(",","",X.3))
)
gdp
merged = merge(gdp, edu, by.x="X", by.y="CountryCode")
merged
merged = merged %>% group_by(Income.Group)
summarise(merged, avg = mean(numProd))
summarise(merged, avg = mean(numGdpd))
summarise(merged, avg = mean(numGdpd, na.rm = T))
?quantile
quantile(merged)
quantile(merged$numGdpd)
quantile(merged$numGdpd, na.rm = T)
table(merged)
table(merged, quantile(merged$numGdpd, na.rm = T))
remove(list=ls())
source('~/editing txt variables.R')
names(cameraData)
toLower(names(cameraData))
tolower(names(cameraData))
splitNames = strsplit(names(cameraData), "\\.")
splitNames[[5]]
splitNames[[6]]
myList = list(letters = c("A", "b", "c"), numbers = 1:3, matrix(1:25, ncol = 5))
head(myList)
splitNames[[6]][1]
firstElement = function(x) {x[1]}
sapply(splitNames, firstElement)
reviews = read.csv("./data/reviews.csv")
solutions = read.csv("./data/solutions.csv")
head(reviews,2)
head(solutions,2)
names(reviews)
sub("_", "",names(reviews),)
names(reviews)
testName = "this_is_a_test"
sub("_","", testName)
gsub("_", "", testName)
grep("Alameda", cameraData$intersection)
table(grepl("Alameda", cameraData$intersection))
cameraData2 = cameraData(!grepl("Alameda", cameraData$intersection))
cameraData2 = cameraData[!grepl("Alameda", cameraData$intersection)]
cameraData2 = cameraData[!grepl("Alameda", cameraData$intersection),]
cameraData2
str(cameraData2)
grep("Alameda", cameraData$intersection,value=T)
library(stringr)
nchar("asdfa asdf ")
substr("asdf asdf ",1,7)
paste("asdfa ", "asdf ")
paste0(":asdf","asdf")
str_trim("asdfasdf            ")
d1 = date()
d1
classa(d1)
class(d1)
d2 = Sys.Date()
d2
class(d2)
format(d2, "%a, %b %d")
format(d2, "%aa, %b %d")
format(d2, "%aaa, %b %d")
format(d2, "%a, %b %d %y %Y")
x = c("1jan1960", "2jan1960", "31mar1960", "30jul1960")
z = as.Date(x, "%d%b%Y")
z
z = as.Date(x, "%D%b%Y")
z
z = as.Date(x, "%dd%b%Y")
z = as.Date(x, "%dd%b%Y")
z
z = as.Date(x, "%d%b%Y")
z
install.packages("lubridate")
library(lubridate)
ymd("20140108")
swirl()
library(swirl)
swirl()
Sys.getlocale()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = "lubridate")
help(package = lubridate)
this_day = today
this_day = today()
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label=T)
wday(this_day, label=TRUE)
this_momoent <- now()
this_moment <- now()
this_moment
second(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("19200-1-2")
ymd("19200/1/2")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:15")
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours=8, minutes = 34, seconds = 55)
this_moment
this_moment = update(this_moment, hours=13, minutes= 9)
this_moment = update(this_moment, hours=10, minutes= 16, seconds=0)
update(this_moment, hours=10, minutes= 16, seconds=0)
this_moment
?now
nyc = now(tzone="America/New_York")
nyc <- now(tzone="America/New_York")
nuc
nyc
depart = nyc + days(2)
depart <0 nyc + days(2)
depart <- nyc + days(2)
depart
depart = update(depart, hours=17, minutes = 34)
depart <- update(depart, hours=17, minutes = 34)
depart
arriva = depart + hours(15) + minutes(50)
arriva <- depart + hours(15) + minutes(50)
arrive <- depart + hours(15) + minutes(50)
arrive <- depart + hours(15) + minutes(50)
arrive <- depart + hours(15) + minutes(50)
arrive <- depart + hours(15) + minutes(50)
info()
arrive
arrive <- depart + hours(15) + minutes(50)
arrive <- depart + hours(15) + minutes(50)
remove("arrive")
arrive <- depart + hours(15) + minutes(50)
remove("arriva")
arrive <- depart + hours(15) + minutes(50)
arrive <- depart + hours(15) + minutes(50)
arrive <- with_tz(arrive, "Asia/Hong_Kong")
bye()
swirl()
arrive = depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time = mdy("June 17, 2008")
last_time = mdy("June 17, 2008", tz="Singapore")
last_time <- mdy("June 17, 2008", tz="Singapore")
last_time
?interval
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
remove(list=ls())
houseHolds = read.csv("survey.csv")
head(houseHolds)
strsplit(names(houseHolds),"wgtp")
res = strsplit(names(houseHolds),"wgtp")
res[[123]]
res[123]
fileUrl = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "./data/housing.csv")
housing = read.csv("./data/housing.csv")
strsplit(names(housing),"wgtp")
split - strsplit(names(housing),"wgtp")
split = strsplit(names(housing),"wgtp")
split
split[123]
fileUrl = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl, destfile = "./data/gdp.csv")
gdp = read.csv("./data/gdp.csv")
?gsub
nums = gsub(",","", gdp$X.3)
nums
mean(nums, na.rm = T)
mean(nums[4:], na.rm = T)
mean(nums[4:length(nums)], na.rm = T)
mean(nums[5:length(nums)], na.rm = T)
nums = sapply(nums[5:], as.numeric)
nums = sapply(nums[5:length(nums)], as.numeric)
nums
mean(nums, na.rm = T)
head(gdp)
tail(gdp)
library(dplyr)
ranked = gdp %>% filter(Gross.domestic.product.2012 != "")
ranked
str(ranked)
tail(ranked)
ranked = gdp %>% filter(Gross.domestic.product.2012 != "" | Gross.domestic.product.2012 != " ")
nrows(ranked)
nrow(ranked)
ranked = gdp %>% filter(Gross.domestic.product.2012 != "" )
nrow(ranked)
ranked = gdp %>% filter(Gross.domestic.product.2012 != "" & Gross.domestic.product.2012 != " ")
nrow(ranked)
nums = gsub(",","", ranked$X.3)
nums[4]
nums[3]
nums
mean(nums[2:length(nums)])
nums = sapply(num[2:length(nums)], as.numeric)
nums = sapply(nums[2:length(nums)], as.numeric)
mean(nums, na.rm = T)
tail(ranked)
grep("^United",gdp$X.4)
head(gdp)
grep("^United",gdp$X.2)
fileUrl = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl, destfile = "./data/education.csv")
edu = read.csv("./data/education.csv")
merged = merge(gdp, edu, by.x = "X", by.y="CountryCode")
head(merged)
names(edu)
head(edu)
headu(gdp)
head(gdp)
head(gdp,20)
fileUrl
names(edu)
head(edu,20)
head(edu,200)
names(merged)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN", auto.assign = FALSE)
sampleTimes = index(amzn)
sampleTimes
grep("2012", sampleTimes)
grep("2012", sampleTimes, value = T)
day(sampleTimes[[1]])
library(lubridate)
?lubridate
wday(sampleTimes[[1]])
days= sapply(sampleTimes, wday)
days
days == 2
res = which(days ==2)
res
length(res)
year2012 = grep("2012",sampleTimes, value=T)
year2012
days = sapply(year2012, wday)
length(which(days ==2))
setwd()
setwd("/Users/edoardopedrotti/datascience/getting cleaning data/project")
remove(list=ls())
list.files()
read.table("./data/test/X_test.txt")
?read.table
read.table("./data/features.txt")
featureWanted = grep(".*mean.*")
featureWanted = grep(".*mean.*|.*std.*", features)
feature = read.table("./data/features.txt")
featureWanted = grep(".*mean.*|.*std.*", features)
featureWanted = grep(".*mean.*|.*std.*", feature)
featureWanted
featureWanted = grep("*.mean.*|.*std.*", feature)
featureWanted
featureWanted = grep("(.*mean.*|.*std.*)", feature)
featureWanted
featureWanted = grep("(.*mean.*|.*std.*)", feature, value = T)
featureWanted
featureWanted = grep("(*.mean*.|*.std*.)", feature, value = T)
featureWanted
feature
feature[3]
feature[3,]
feature$V2
featureWanted = grep("(.*mean.*|.*std.*)", feature$V2, value = T)
featureWanted
source('~/datascience/getting cleaning data/project/run_analysis.R')
source('~/datascience/getting cleaning data/project/run_analysis.R')
meanAndStd
test = read.table("./data/test/X_test.txt")[meanAndStd]
test = read.table("./data/test/X_test.txt")
test
meanAndStd[,2]
feature[featureWanted,2]
source('~/datascience/getting cleaning data/project/run_analysis.R')
meanAndStd
test = read.table("./data/test/X_test.txt")[meanAndStd]
source('~/datascience/getting cleaning data/project/run_analysis.R')
test = read.table("./data/test/X_test.txt")[meanAndStd]
source('~/datascience/getting cleaning data/project/run_analysis.R')
test = read.table("./data/test/X_test.txt")[meanAndStd]
test
source('~/datascience/getting cleaning data/project/run_analysis.R')
activitiesLabels
class(activitiesLabels[[,2]])
class(activitiesLabels[[2]])
source('~/datascience/getting cleaning data/project/run_analysis.R')
source('~/datascience/getting cleaning data/project/run_analysis.R')
remove("meanAndSTd")
source('~/datascience/getting cleaning data/project/run_analysis.R')
source('~/datascience/getting cleaning data/project/run_analysis.R')
meanAndStd.names
source('~/datascience/getting cleaning data/project/run_analysis.R')
meanAndStd.names
source('~/datascience/getting cleaning data/project/run_analysis.R')
trainActivities
head(train)
source('~/datascience/getting cleaning data/project/run_analysis.R')
trainSubjects
source('~/datascience/getting cleaning data/project/run_analysis.R')
head(test)
source('~/datascience/getting cleaning data/project/run_analysis.R')
allData
?melt
library(dplyr)
grouped = allData %>% group_by(subject, activity)
grouped
str(groupd)
str(grouped)
grouped %>% summarize_each(mean)
grouped %>% summarize_each(funs(mean))
source('~/datascience/getting cleaning data/project/run_analysis.R')
source('~/datascience/getting cleaning data/project/run_analysis.R')
